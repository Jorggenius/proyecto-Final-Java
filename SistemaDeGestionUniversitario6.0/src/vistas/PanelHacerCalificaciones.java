/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controladores.ControlPanelHacerCalificaciones;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import modelo.Curso;
import modelo.DetalleNota;
import modelo.Docente;
import modelo.Nota;

/**
 *
 * @author JORGE
 */
public class PanelHacerCalificaciones extends javax.swing.JFrame {

    ArrayList<Curso> cursos;
    ControlPanelHacerCalificaciones controlPHC;
    Docente docente;

    /**
     * Creates new form GestionCalificaciones
     */
    public PanelHacerCalificaciones(ArrayList<Curso> cursos, Docente docente) {
        initComponents();
        setLocationRelativeTo(this);
        this.cursos = cursos;
        controlPHC = new ControlPanelHacerCalificaciones();
        this.docente = docente;
        llenarTabla();
        llenarComboBoxIdCursos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanelHacerCalificaciones1 = new controladores.ControlPanelHacerCalificaciones();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCursos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaNotas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaDetalles = new javax.swing.JTable();
        cbIdCursos = new javax.swing.JComboBox<>();
        btnMostrarEsts = new javax.swing.JButton();
        cbNotas = new javax.swing.JComboBox<>();
        btnDetalles = new javax.swing.JButton();
        txtNota = new javax.swing.JTextField();
        lblNota1 = new javax.swing.JLabel();
        cbdetalles = new javax.swing.JComboBox<>();
        btnCalificar = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 441, -1, -1));

        tablaCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Materia", "Programa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaCursos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 200));

        tablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Razon", "Porcentaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaNotas);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 130, 200));

        tablaDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estudiante", "Nota", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaDetalles);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 260, 200));

        getContentPane().add(cbIdCursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        btnMostrarEsts.setText("Ver notas");
        btnMostrarEsts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarEstsActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrarEsts, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        getContentPane().add(cbNotas, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

        btnDetalles.setText("Detalles");
        btnDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 80, -1));
        getContentPane().add(txtNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 100, -1));

        lblNota1.setText("Nota ");
        getContentPane().add(lblNota1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        getContentPane().add(cbdetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, -1, -1));

        btnCalificar.setText("Calificar");
        btnCalificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCalificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, -1, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FondoCalificaciones.png"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        VentanaUsDocente ventanaD = new VentanaUsDocente(docente);
        ventanaD.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnMostrarEstsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarEstsActionPerformed
        // TODO add your handling code here:
        int id = cbIdCursos.getSelectedIndex();
        llenarTablaNotas(id);

        llenarComboBoxIdNotas(id);
    }//GEN-LAST:event_btnMostrarEstsActionPerformed

    private void btnDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetallesActionPerformed
        // TODO add your handling code here:
        int indexC = cbIdCursos.getSelectedIndex();
        int indexN = cbNotas.getSelectedIndex();

        llenarTablaDetalles(indexC, indexN);
        llenarComboBoxEstudiante(indexC, indexN);
    }//GEN-LAST:event_btnDetallesActionPerformed

    private void btnCalificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalificarActionPerformed
        // TODO add your handling code here:

        int idCurso = Integer.parseInt((String) cbIdCursos.getSelectedItem());
        int indexC = cbIdCursos.getSelectedIndex();
        System.out.println(idCurso);

        String razon = (String) cbNotas.getSelectedItem();
        int indexN = cbNotas.getSelectedIndex();
        System.out.println(razon);
        //----------------------------------------------------------------------------+
//        for (int i = 0; i < tablaDetalles.getRowCount(); i++) {
//            for (int j = 0; j < tablaDetalles.getColumnCount(); j++) {
//                String valor = String.valueOf(tablaDetalles.getValueAt(i, j));
//                
//            }
//            
//            
//        }
        //-----------------------------------------------------------------------------
        String nombre = String.valueOf(cbdetalles.getSelectedItem());
        System.out.println(nombre);
        float nota = new BigDecimal(txtNota.getText()).setScale(1, RoundingMode.HALF_UP).floatValue();
        if ( nota <= 5) {
            controlPHC.calificar(idCurso, razon, nombre, nota);
            controlPHC.actualizarCursos(cursos);
            llenarTablaDetalles(indexC, indexN);
        } else {
            JOptionPane.showMessageDialog(null, "La nota debe estar entre 0 y 5");
        }

    }//GEN-LAST:event_btnCalificarActionPerformed

    public void llenarTabla() {
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"Id", "Materia", "Programa"}, cursos.size());
        tablaCursos.setModel(modelo);
        TableModel modeloCurso = tablaCursos.getModel();
        for (int i = 0; i < cursos.size(); i++) {
            Curso curso = cursos.get(i);
            modeloCurso.setValueAt(curso.getId(), i, 0);
            modeloCurso.setValueAt(curso.getMateria(), i, 1);
            modeloCurso.setValueAt(curso.getPrograma(), i, 2);
        }
    }

    public void llenarTablaNotas(int id) {
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"Razon", "Porcentaje"}, cursos.get(id).getNotas().size());
        System.out.println("este es el size de los estudiantes incritos en en curso 1 " + cursos.get(id).getNotas().get(0).getDetalles().size());
        tablaNotas.setModel(modelo);
        TableModel modeloNota = tablaNotas.getModel();
        for (int i = 0; i < cursos.get(id).getNotas().size(); i++) {
            Nota nota = cursos.get(id).getNotas().get(i);
            modeloNota.setValueAt(nota.getRazon(), i, 0);
            modeloNota.setValueAt(nota.getPorcentage(), i, 1);
        }
    }

    public void llenarTablaDetalles(int indexC, int indexN) {
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"Estudiante", "Nota", "Estado"}, cursos.get(indexC).getNotas().get(indexN).getDetalles().size());
        tablaDetalles.setModel(modelo);
        TableModel modeloDetalle = tablaDetalles.getModel();
        for (int i = 0; i < cursos.get(indexC).getNotas().get(indexN).getDetalles().size(); i++) {
            DetalleNota nota = cursos.get(indexC).getNotas().get(indexN).getDetalles().get(i);
            modeloDetalle.setValueAt(nota.getEstudiante().getNombre(), i, 0);
            modeloDetalle.setValueAt(nota.getNota(), i, 1);
            modeloDetalle.setValueAt(nota.isCalificado(), i, 2);
        }
    }

    public void llenarComboBoxIdCursos() {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        for (Curso curso : cursos) {
            modelo.addElement(String.valueOf(curso.getId()));
        }
        cbIdCursos.setModel(modelo);
    }

    public void llenarComboBoxIdNotas(int id) {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        for (Nota nota : cursos.get(id).getNotas()) {
            modelo.addElement(String.valueOf(nota.getRazon()));
        }
        cbNotas.setModel(modelo);
    }

    public void llenarComboBoxEstudiante(int indexC, int indexN) {
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        for (DetalleNota detalle : cursos.get(indexC).getNotas().get(indexN).getDetalles()) {
            modelo.addElement(detalle.getEstudiante().getNombre());
        }
        System.out.println("Este es el size de los detalles " + cursos.get(indexC).getNotas().get(indexN).getDetalles().size());
        cbdetalles.setModel(modelo);
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalificar;
    private javax.swing.JButton btnDetalles;
    private javax.swing.JButton btnMostrarEsts;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbIdCursos;
    private javax.swing.JComboBox<String> cbNotas;
    private javax.swing.JComboBox<String> cbdetalles;
    private controladores.ControlPanelHacerCalificaciones controlPanelHacerCalificaciones1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblNota1;
    private javax.swing.JTable tablaCursos;
    private javax.swing.JTable tablaDetalles;
    private javax.swing.JTable tablaNotas;
    private javax.swing.JTextField txtNota;
    // End of variables declaration//GEN-END:variables
}
